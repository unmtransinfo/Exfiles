#!/bin/bash

set -e
#set -x

CHRONOS=https://stars-app.renci.org/chronos/
IRODS_PORT=1247
IRODS_ZONE_NAME="commonssharetestZone"
IRODS_HOST="test.commonsshare.org"
IRODS_HOME="/$IRODS_ZONE_NAME"
IRODS_CWD="/$IRODS_ZONE_NAME"
# IRODS_USER_NAME="rods"

usage() {
    echo "Usage: $0 {build|run} [options...]"
    echo
    echo "  build {base|jupyter|all}"
    echo "    Run command to build specified or all Docker images."
    echo
    echo "  run {base|jupyter}"
    echo "    Specify image to run."
    echo "    base: "
    echo "       -cwl | -toil     Required. Select which virtual environment
    to start."
    echo "           -cwl         Starts virtual environment with Python 3 and
    CWLTool."
    echo "           -toil        Starts virtual environment with Python 2.7
    and Toil."
    echo "       -U|--username    Required. Username to connect to iRODS."
    echo "       -P|--password    Optional. Password to connect to iRODS."
    echo
    echo "    jupyter: "
    echo "       -wes-server | -jupyter | -venv     Required. Select start
    option."
    echo "           -wes-server          Starts WES server in Docker
    container."
    echo "           -jupyter             Starts Jupyter notebook server in
    contianer."
    echo "           -venv                Starts Jupyter notebook as
    background process."
    echo
}
build () {
    cd docker
    base () {
        bash build-base.sh
    }
    jupyter () {
        bash build-jupyter.sh
    }
    all () {
        base
        jupyter
    }
    $*
    cd ..
}
run () {
    base () {
        local IRODS_USER_NAME=
        local IRODS_PASSWORD=
        local START=

        while [ "$1" != "" ]; do
            case $1 in
                -cwl )                   START="venv"
                                        ;;
                -toil )                  START="toilvenv"
                                        ;;
                -U | --user )           shift
                                        IRODS_USER_NAME=$1
                                        ;;
                -P | --password )       shift
                                        IRODS_PASSWORD=$1
                                        ;;
                * )                     echo "ERROR: Input not found."
                                        exit 1
            esac
            shift
        done

        if [ ! -z "$IRODS_USER_NAME" ]
        then
            docker run -it --privileged --rm --name dc_base   \
                -e CHRONOS_URL=${CHRONOS}                     \
                -e IRODS_PORT=${IRODS_PORT}                   \
                -e IRODS_HOST=${IRODS_HOST}                   \
                -e IRODS_HOME=${IRODS_HOME}                   \
                -e IRODS_CWD=${IRODS_CWD}                     \
                -e IRODS_USER_NAME=${IRODS_USER_NAME}         \
                -e IRODS_PASSWORD=${IRODS_PASSWORD}           \
                -e IRODS_ZONE_NAME=${IRODS_ZONE_NAME}         \
                -p 90:80                                      \
                heliumdatacommons/datacommons-base            \
                ${START}
        else
            echo "ERROR: iRODS Username not provided."
            exit 1;
        fi
    }
    #               heliumdatacommons/datacommons-jupyter         \
    jupyter () {
        local IRODS_USER_NAME=
        local IRODS_PASSWORD=
        local START="jupyter"

        while [ "$1" != "" ]; do
            case $1 in
                -wes-server )           START="wes-server"
                                        ;;
                -jupyter )              START="jupyter"
                                        ;;
                -venv )                 START="venv"
                                        ;;
                -U | --user )           shift
                                        IRODS_USER_NAME=$1
                                        ;;
                -P | --password )       shift
                                        IRODS_PASSWORD=$1
                                        ;;
                * )                     echo "ERROR: Input not found."
                                        exit 1
            esac
            shift
        done

        if [ ! -z "$IRODS_USER_NAME" ]
        then
            docker run -it --privileged -d --name dc_jupyter    \
                -e CHRONOS_URL=${CHRONOS}                       \
                -e IRODS_PORT=${IRODS_PORT}                     \
                -e IRODS_HOST=${IRODS_HOST}                     \
                -e IRODS_HOME=${IRODS_HOME}                     \
                -e IRODS_CWD=${IRODS_CWD}                       \
                -e IRODS_USER_NAME=${IRODS_USER_NAME}           \
                -e IRODS_PASSWORD=${IRODS_PASSWORD}             \
                -e IRODS_ZONE_NAME=${IRODS_ZONE_NAME}           \
		-e GTEX_DATA_PATH_1=${GTEX_DATA_PATH_1}         \
		-e GTEX_DATA_PATH_2=${GTEX_DATA_PATH_2}         \
                -p 8888:8888 -p 90:80                           \
                --volume ~/dev:/home/dockeruser/hdev            \
                heliumdatacommons/datacommons-jupyter           \
                ${START}
        else
            echo "ERROR: iRODS Username not provided."
            exit 1;
        fi
    }
    $*
}


if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    usage
    exit 0
fi
$*
